generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [vector]
}

model Note {
  id        Int      @id @default(autoincrement())
  title     String
  content   String?  @db.Text
  category  String?
  summary   String?  @db.Text
  embedding Json?    // Will store vector data
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  
  noteTags  NoteTag[]
  versions  NoteVersion[]
  
  @@map("notes")
}

model Tag {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  color     String   @default("#4263eb")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  
  noteTags  NoteTag[]
  
  @@map("tags")
}

model NoteTag {
  id        Int      @id @default(autoincrement())
  noteId    Int      @map("note_id")
  tagId     Int      @map("tag_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  
  note      Note     @relation(fields: [noteId], references: [id], onDelete: Cascade)
  tag       Tag      @relation(fields: [tagId], references: [id], onDelete: Cascade)
  
  @@unique([noteId, tagId])
  @@map("note_tags")
}

model NoteVersion {
  id        Int      @id @default(autoincrement())
  noteId    Int      @map("note_id")
  content   String?  @db.Text
  title     String?
  metadata  Json?    @default("{}")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  
  note      Note     @relation(fields: [noteId], references: [id], onDelete: Cascade)
  
  @@map("note_versions")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String?
  email     String   @unique
  password  String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  
  @@map("users")
}